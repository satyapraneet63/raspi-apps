services:
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    env_file: '.env'
    container_name: audiobookshelf
    user: 1000:1000
    ports:
      - ${AUDIOBOOKSHELF_PORT}:80
    volumes:
      - ${MOUNT_POINT}/media/books:/audiobooks
      - ${APP_CONFIG}/audiobookshelf:/config
      - ${MOUNT_POINT}/media/books/.audiobookshelf-metadata:/metadata
    restart: unless-stopped
  
  jellyfin:
    image: jellyfin/jellyfin:latest
    env_file: '.env'
    container_name: jellyfin
    user: 1000:1000
    network_mode: host
    ports:
      - ${JELLYFIN_PORT}:8096
    volumes:
      - ${JELLY_LOCATION}/config:/config
      - ${JELLY_LOCATION}/cache:/cache
      - ${MOUNT_POINT}/media:/media/media
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped
  
  prowlarr:
    image: linuxserver/prowlarr:latest
    env_file: '.env'
    container_name: prowlarr
    user: 1000:1000
    network_mode: "service:gluetun"
    volumes:
      - ${APP_CONFIG}/prowlarr:/config
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    env_file: '.env'
    container_name: sonarr
    user: 1000:1000
    network_mode: "service:gluetun"
    volumes:
      - ${APP_CONFIG}/sonarr:/config
      - ${MOUNT_POINT}:/media
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    env_file: '.env'
    container_name: radarr
    user: 1000:1000
    network_mode: "service:gluetun"
    volumes:
      - ${APP_CONFIG}/radarr:/config
      - ${MOUNT_POINT}:/media
    restart: unless-stopped
  
  homarr:
    image: ghcr.io/homarr-labs/homarr:latest
    env_file: '.env'
    container_name: homarr
    user: 0:0
    ports:
      - ${HOMARR_PORT}:7575
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOMARR_PATH}/configs:/app/data/configs
      - ${HOMARR_PATH}/icons:/app/public/icons
      - ${HOMARR_PATH}/data:/data
      - ${HOMARR_PATH}/appdata:/appdata
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    env_file: '.env'
    container_name: bazarr
    user: 1000:1000
    network_mode: "service:gluetun"
    volumes:
      - ${APP_CONFIG}/bazarr:/config
      - ${MOUNT_POINT}:/media
    restart: unless-stopped
  
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr:latest
    env_file: '.env'
    container_name: recyclarr
    user: 1000:1000
    network_mode: "service:gluetun"
    volumes:
      - ${APP_CONFIG}/recyclarr:/config
    restart: unless-stopped

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    hostname: gluetun
    env_file: '.env'
    cap_add:
      - NET_ADMIN
    # The sysctl disable below is recommended for simpler IPv4-only setups.
    # If you have IPv6, you can remove that line.
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 1
    volumes:
      - ${APP_CONFIG}/gluetun:/gluetun
      - ${APP_CONFIG}/gluetun/auth/config.toml:/gluetun/auth/config.toml:ro
    environment:
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=AIar1YZ2SFmHjV+0JGzPsiKwsqVJl901q880+rbULE8=
      - VPN_PORT_FORWARDING=on
      - HTTP_CONTROL_SERVER=on  # Enables the control API for managing Gluetun
      - HTTP_CONTROL_SERVER_AUTH_CONFIG_FILEPATH=/gluetun/auth/config.toml  # Explicitly define the auth config file`1  `
    ports:
      - "8090:8080/tcp"
      - ${PROWLARR_PORT}:9696
      - ${SONARR_PORT}:8989
      - ${RADARR_PORT}:7878
      - ${BAZARR_PORT}:6767
    restart: unless-stopped
  
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_started
    environment:
      - PUID=1000
      - PGID=1000
      - WEBUI_PORT=8080
      - QBITTORRENT_INTERFACE=tun0
      - DOCKER_MODS=ghcr.io/satyapraneet63/gsp-qbittorent-gluetun-sync-port-mod-arm64:main
      - GSP_GTN_API_KEY=M8jPStro7iMiCMLQUTSTfh
      - GSP_MINIMAL_LOGS=false
    volumes:
      - ${APP_CONFIG}:/config
      - ${MOUNT_POINT}/torrents:/media/torrents
    restart: unless-stopped

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    env_file: '.env'
    container_name: nginx-proxy-manager
    ports:
      - 80:80
      - 443:443
      - 81:81
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      - database
    restart: unless-stopped
  
  database:
    image: yobasystems/alpine-mariadb:latest
    env_file: '.env'
    container_name: database
    volumes:
      - ./mysql:/var/lib/mysql
    restart: unless-stopped

  copyparty:
    image: copyparty/ac:latest
    env_file: '.env'
    container_name: copyparty
    user: 1000:1000
    ports:
      - ${COPYPARTY_PORT}:3923
    volumes:
      - ${APP_CONFIG}/copyparty:/cfg # Config + logs
      - ${MOUNT_POINT}:/w   # Shared folder (choose actual folder)
    environment:
      PYTHONUNBUFFERED: 1
      
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default:
    external: true
    driver: bridge
    name: bobby-home